---
- name: Harden Linux instance
  hosts: localhost
  become: yes
  vars:
    ansible_user: ec2-user
  tasks:
    - name: Ensure root login is disabled
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PermitRootLogin'
        line: 'PermitRootLogin no'
      notify: restart sshd

    - name: Disable password-based authentication
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^PasswordAuthentication'
        line: 'PasswordAuthentication no'
      notify: restart sshd

    - name: Set SSH protocol to 2
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: '^Protocol'
        line: 'Protocol 2'
      notify: restart sshd


    - name: Ensure the SSH key exists
      local_action:
        module: stat
        path: ~/.ssh/id_rsa.pub
      register: ssh_key

    - name: Generate SSH key if it does not exist
      local_action:
        module: command
        cmd: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
      when: not ssh_key.stat.exists

    - name: Enable SSH key-based authentication
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

    - name: Install firewalld
      package:
        name: firewalld
        state: present
      when: ansible_distribution in ["RedHat", "CentOS", "Fedora", "Amazon"]

    - name: Ensure only necessary services are running
      service:
        name: "{{ item }}"
        enabled: yes
        state: started
      loop:
        - sshd
        - firewalld

  handlers:
    - name: restart sshd
      service:
        name: sshd
        state: restarted
~
